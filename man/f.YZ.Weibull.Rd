% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/survival_funcs.R
\name{f.YZ.Weibull}
\alias{f.YZ.Weibull}
\title{Joint density function for two conditionally Weibull
random variables, marginalized over the frailty term.}
\usage{
f.YZ.Weibull(y, z, parameters_x, parameters_y, gamma_shape, gamma_rate,
  epsilon, control_list, int.upper, correlated = TRUE)
}
\arguments{
\item{y}{A number at which to evaluate the density \eqn{Y = y}}

\item{z}{A number at which to evaluate the density \eqn{X = z-y}}

\item{parameters_x}{A list, with an element named \code{lambda} (\eqn{\lambda_x}), and an element named \code{p} (\eqn{p_x}).}

\item{parameters_y}{A list, with an element \code{lambda} (\eqn{\lambda_y}), and an element named \code{p} (\eqn{p_y}).}

\item{gamma_shape}{A number, the shape parameter of Gamma frailty distribution}

\item{gamma_rate}{A number, the rate parameter of Gamma frailty distribution}

\item{epsilon}{A float, the lower bound for support of K}

\item{control_list}{A list, with an element named \code{rel.tol} to be passed to `distrExIntegrate` as the \code{rel.tol} argument (see \code{?distrExIntegrate})}

\item{int.upper}{A float, the upper bound for support of K}

\item{correlated}{If \code{FALSE}, then \eqn{X} and \eqn{Y} are independent. If \code{TRUE}, then
there is a shared frailty term \eqn{K} that induces correlation between \eqn{X} and \eqn{Y}.}
}
\value{
joint density function evaluated at \code{Y=y, and X=z-y}.
}
\description{
If \code{correlated}, the function computes the marginal joint density
of Y and Z by marginalizing over the support of K. For computational efficiency,
it integrates from \code{epsilon} to \code{int.upper}, where \code{epsilon} can be 0
and \code{int.upper} can be \code{Inf}. Small deviations from 0 and \code{Inf} will
approximate the true integral.
}
\details{
\eqn{X \sim Weibull(shape=p_{x}, rate=\lambda_{x} \cdot k^{p_{x}})} \cr
\eqn{Y \sim Weibull(shape=p_{y}, rate=\lambda_{y} \cdot k^{p_{y}})} \cr
\eqn{Z := X + Y \to X = Z - Y} \cr
\eqn{K \sim Gamma(shape=gamma_shape, rate=gamma_rate)}
}
